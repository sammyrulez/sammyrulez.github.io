<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="https://samreghenzi.it/feed.xml" rel="self" type="application/atom+xml" /><link href="https://samreghenzi.it/" rel="alternate" type="text/html" /><updated>2021-10-07T08:59:37+00:00</updated><id>https://samreghenzi.it/feed.xml</id><title type="html">Sam Reghenzi</title><subtitle>A blog about technology and stuff related</subtitle><entry><title type="html">A trick or two I found to manage maven settings</title><link href="https://samreghenzi.it/a-trick-or-two-i-found-to-manage-maven-settings/" rel="alternate" type="text/html" title="A trick or two I found to manage maven settings" /><published>2019-02-02T22:48:00+00:00</published><updated>2019-02-02T22:48:00+00:00</updated><id>https://samreghenzi.it/a-trick-or-two-i-found-to-manage-maven-settings</id><content type="html" xml:base="https://samreghenzi.it/a-trick-or-two-i-found-to-manage-maven-settings/">&lt;h1 id=&quot;a-trick-or-two-i-found-to-manage-maven-settings&quot;&gt;A trick or two I found to manage maven settings&lt;/h1&gt;

&lt;p&gt;A few weeks ago I was setting up a minimal Continuous Integration solution based on Maven running on Bitbucket pipelines. To frame the problem lets just say it was a git mono-repo with the sources of multiple artifacts. Some of these artifacts where runnable applications, but others where client libraries that I had to deploy in a private maven repository. Now I run into a security issue and a moral problem: maven stores credentials to access private repository in the settings.xml configuration file. Although everybody uses a global/ system-wide settings.xml is also possible to override with a local one using the -s cli switch. According to maven’s documentation is not possible to pass repository credentials from the command line. Now I surely don’t want to commit a file with my private maven repository credentials in it. I don’t even want to commit a settings.xml file into my git repo just for the sake of the Continuous Integration. Many CI product asks for a configuration file in the root repository with the description of the actions flow for the build (bitbucket-pipelines.yml): this is the necessary evil and the maximum level of intrusion I can stand in my projects.
So I used the environment variable substitution feature of Maven to solve the first issue. In a custom settings.xml file, I defined the server entries for my private repo, but I put just placeholders for environment variables.&lt;/p&gt;

&lt;p&gt;&amp;lt;iframe src=”https://medium.com/media/af936afc41822c087c98df7e36d3313d” frameborder=0&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/p&gt;

&lt;p&gt;Then I defined my.repo.user and my.repo.password as environment variables in Bitbucket pipeline system.&lt;/p&gt;

&lt;p&gt;But still I had a rogue settings xml in my git repo. To get rid of that I thought that I could embed it in the bitbucket-pipelines.yml file, which is the only file I want to maintain for the CI stuff. So I base64 encoded it and I added a step in the build to decode it.&lt;/p&gt;

&lt;p&gt;&amp;lt;iframe src=”https://medium.com/media/fefb27121b84cf87acdc06eb0c795dd2” frameborder=0&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/p&gt;

&lt;p&gt;Et voilà a clean and secure solution to deploy my artifacts in a private repo from bitbucket ( or similar CI products)&lt;/p&gt;</content><author><name>samreghenzi</name></author><category term="blog" /><category term="java" /><category term="maven" /><category term="devops" /><summary type="html">A trick or two I found to manage maven settings</summary></entry><entry><title type="html">Why I left a huge software firm to join a startup</title><link href="https://samreghenzi.it/why-i-left-a-huge-software-firm-to-join-a-startup/" rel="alternate" type="text/html" title="Why I left a huge software firm to join a startup" /><published>2018-08-10T22:48:00+00:00</published><updated>2018-08-10T22:48:00+00:00</updated><id>https://samreghenzi.it/why-i-left-a-huge-software-firm-to-join-a-startup</id><content type="html" xml:base="https://samreghenzi.it/why-i-left-a-huge-software-firm-to-join-a-startup/">&lt;h1 id=&quot;why-i-left-a-huge-software-firm-to-join-a-startup&quot;&gt;Why I left a huge software firm to join a startup&lt;/h1&gt;

&lt;p&gt;Today is my last day at Engineering S.P.A, one of the biggest software firms in Italy. I worked here for over a decade. In a so long stretch of time, there have been good, bad and very bad moments. I came here to develop a huge developer oriented source generator/framework. In all these years I learned a lot of stuff, mostly on my own, for my own sake, driven by the hunger for knowledge. I developed high profile skills in application security and system integration and I had the chance to develop huge products for the top financial players in my country. This is the kind of opportunity that only a big software firm can put on the table. There have been tough times. I worked really hard to build bridges between old legacy systems and brand new solutions. Just a few years ago I had the opportunity to work on a very important project and we did an awesome job. It has been how working in a big company should be. We develop a foundation technology in order to easily integrate a particular kind of legacy systems at a more abstract level. This stuff has been used for years now in different products and even extended multiple times with very little effort. It is a damn good design piece of software. It will be my little legacy in this place. So why am I leaving? Because that amazing product did not make history, it did not become the standard way of managing projects. This seemed to become more and hastier. I’m sorry to say so, probably in a company with thousands of employees is a necessary evil, but still, it makes day to day work really grinding. The “problem” is that the banking sector has been one of the first field being heavily digitalized. Now we have a huge volume of legacy system that can not sustain the volume and the business needs of the modern financial industry. That’s fine but I need a change, I need to work on something new that is not a big rewrite of a legacy product that has to look like exactly as the old one. I will join a vibrant young company in pursuit of my dream of becoming a better software engineer, not just an experienced developer, a living reference guide for tools and libraries. I will work with friends that are skilled professionals, exchanging knowledge and jokes, the team is driven by a mission I believe in: to build a software that simplifies people jobs with the help of Machine learning techniques. I will write more about my new job soon. I will work in an international environment which is something I always dreamed of. Life is full of uncertain, but from the uncertain comes possibility and from possibility comes development. And, at the end of the day, I’m a developer!&lt;/p&gt;</content><author><name>samreghenzi</name></author><category term="blog" /><category term="lifestyle" /><category term="personal" /><summary type="html">Why I left a huge software firm to join a startup</summary></entry><entry><title type="html">I will ride like a gentlemen</title><link href="https://samreghenzi.it/i-will-ride-like-a-gentlemen/" rel="alternate" type="text/html" title="I will ride like a gentlemen" /><published>2017-04-17T22:48:00+00:00</published><updated>2017-04-17T22:48:00+00:00</updated><id>https://samreghenzi.it/i-will-ride-like-a-gentlemen</id><content type="html" xml:base="https://samreghenzi.it/i-will-ride-like-a-gentlemen/">&lt;h1 id=&quot;i-will-ride-like-a-gentlemen&quot;&gt;I will ride like a gentlemen&lt;/h1&gt;

&lt;p&gt;On September 24th I will ride in the Distinguished Gentlemen Ride&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2000/1*_2xCEsRJxtbLU8uSnI9n0w.jpeg&quot; alt=&quot;This is me an my bike at a recent Ducati Scrambler event&quot; /&gt;&lt;em&gt;This is me an my bike at a recent Ducati Scrambler event&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;As a rider of a stylish Ducati Scrambler, I will join my local chapter of the DGR. It is a retro-themed motorbike event, held globally in the world, to raise funds for research into prostate cancer and mental health programs as part of our mission to support men’s health globally. These funds are invested by our partners the Movember Foundation, the world’s largest men’s health organization.&lt;/p&gt;

&lt;h3 id=&quot;prostate-cancer&quot;&gt;PROSTATE CANCER&lt;/h3&gt;

&lt;p&gt;Prostate cancer is the second most commonly diagnosed cancer in men. The Movember Foundation is the largest funder of prostate cancer programs in the world.&lt;/p&gt;

&lt;h3 id=&quot;suicide-prevention--mens-mental-health&quot;&gt;SUICIDE PREVENTION | MEN’S MENTAL HEALTH&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;3 out of 4 suicides are men&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;510,000 men die from suicide globally each year. That’s one every minute. This has to change.&lt;/p&gt;

&lt;p&gt;This is my donation page. Every amount is Wellcome and will help someone in need. Thank You.
&lt;a href=&quot;https://www.gentlemansride.com/rider/SamReghenzi139106&quot;&gt;&lt;strong&gt;Sam Reghenzi&lt;/strong&gt;
&lt;em&gt;This year I am taking part in The Distinguished Gentleman’s Ride to raise funds and awareness for mens health and…&lt;/em&gt;www.gentlemansride.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;UPDATE: this is the video of my ride: enjoy!&lt;/p&gt;

&lt;center&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/4hinpxAyRhY&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/center&gt;</content><author><name>samreghenzi</name></author><category term="blog" /><category term="motorcycle" /><category term="lifestyle" /><category term="personal" /><summary type="html">I will ride like a gentlemen</summary></entry><entry><title type="html">Plays Anatomy: Episode 2</title><link href="https://samreghenzi.it/plays-anatomy-episode-2/" rel="alternate" type="text/html" title="Plays Anatomy: Episode 2" /><published>2017-04-17T22:48:00+00:00</published><updated>2017-04-17T22:48:00+00:00</updated><id>https://samreghenzi.it/plays-anatomy-episode-2</id><content type="html" xml:base="https://samreghenzi.it/plays-anatomy-episode-2/">&lt;h1 id=&quot;the-post-i-link-when-someone-tells-me-that-java-sucks&quot;&gt;The post I link when someone tells me that Java sucks&lt;/h1&gt;
&lt;h1 id=&quot;plays-anatomy-episode-2&quot;&gt;Plays Anatomy: Episode 2&lt;/h1&gt;

&lt;p&gt;Previously on Plays Anatomy….&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@SammyRulez/plays-anatomy-8c0fc865ef37&quot;&gt;Take a look&lt;/a&gt; at part one in case you miss it.&lt;/p&gt;

&lt;p&gt;You find ALL the code on my Github repo
&lt;a href=&quot;https://github.com/sammyrulez/minimal-play2&quot;&gt;&lt;strong&gt;sammyrulez/minimal-play2&lt;/strong&gt;
&lt;em&gt;minimal-play2 - minimal rest service protorype&lt;/em&gt;github.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next on my checklist of desirable features were async response and 
easy integration with an existing AKKA based solution. Play comes with bounded AKKA support. This is a strongly opinionated choice, but in my case, works just fine with the type of systems I would like to integrate.A Play application defines an actor system at start time, add it to the IoC container and it can be used by other modules. This actor system follows the application life-cycle (Automagically). Then you can just ask the system for an actor ad use it as a gateway to other components of the Akka system ( even a distributed one). Having Akka support out of the box without hustle and bustle has benne a huge plus since this is something I spent a lot of time with little satisfaction. You can return Future from an actor response mapping it in a HttpResponse with an “Action.async”&lt;/p&gt;

&lt;p&gt;def index = Action.async {
 val futureInt = scala.concurrent.Future { intensiveComputation() }
 futureInt.map(i =&amp;gt; Ok(“Got result: “ + i))
}&lt;/p&gt;

&lt;p&gt;Akka HTTP is one of the options for the embedded HTTP server in Play project ( the other is Netty). So you see the two frameworks are very bonded together, which is not a good thing by itself, but if you already have chosen Akka as asynchronous actor support, then this bound becomes a positive aspect. 
 I found a very good example at &lt;a href=&quot;http://loicdescotte.github.io/posts/play25-akka-streams/&quot;&gt;http://loicdescotte.github.io/posts/play25-akka-streams/&lt;/a&gt; that explains how to integrate Akka Streams in play ( if this is your thing).&lt;/p&gt;

&lt;p&gt;Testing… testing helps me sleeping better. I don’t mean testing is boring! It make me feel safe: make me feel quite sure that what I’m going to deploy is, at least, technically correct.&lt;/p&gt;

&lt;p&gt;Play framework offers a variety of testing facilities, provisioning tools for bot unit and integration testing. Everything is really straight forward and you can find everything in the documentation.&lt;/p&gt;

&lt;p&gt;On top of standard Play’s tool, I added &lt;strong&gt;scoverage&lt;/strong&gt; and &lt;strong&gt;coveralls&lt;/strong&gt; to track and publish testing coverage of my project. They have both sbt plugins to integrate smoothly in the build process and you can make Travis build fail if the coverage drop below a certain level or is worst than the previous build. This is particularly useful when you have to decide to accept a merge request or not. If the new feature or fix is not supported by additional test, you can make the build fail automatically.&lt;/p&gt;

&lt;p&gt;For **monitoring **I tried **“&lt;a href=&quot;https://github.com/zalando-incubator/markscheider&quot;&gt;markscheider&lt;/a&gt;” **which is a tool by Zalando.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;The name stems from the german mining term &lt;a href=&quot;https://de.wikipedia.org/wiki/Markscheider&quot;&gt;Markscheider&lt;/a&gt;, which was a land surveyor who was responsible for mapping of the mine.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For monitoring, I tried “markscheider” which is a tool by Zalando.
The name stems from the german mining term Markscheider, which was a land surveyor who was responsible for mapping of the mine.&lt;/p&gt;

&lt;p&gt;It is a Play module that integrates dropwizard Metrics ( the only good part in dropwizard… IMHO ) The metrics are created in a way that is compatible with ZMON.&lt;/p&gt;

&lt;p&gt;Probably the best tool for monitoring is Kamon but it requires backend integration with publishing services ( like &lt;em&gt;new relic, datadog&lt;/em&gt; or you own hosted solution ) and it went a bit beyond the scope of my experiment.&lt;/p&gt;

&lt;p&gt;And then &lt;strong&gt;deploy all the things&lt;/strong&gt;! I find Heroku a convenient platform for this kind of experiments. There is a specific guide on Heroku documentation site to deploy Play applications but this is a fast crash course.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/4656/1*YFUQ5WN5b9qSWltvjB8CIg.png&quot; alt=&quot;Heroku supports Play applications&quot; /&gt;&lt;em&gt;Heroku supports Play applications&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Play has a special &lt;strong&gt;stage sbt task&lt;/strong&gt; to build a uber jar, an executable archive with all the classes required to run your application. You just have to add in the root of your git repo a Proc file that defines how to startup your process
&lt;a href=&quot;https://github.com/sammyrulez/minimal-play2/blob/master/Procfile&quot;&gt;&lt;strong&gt;sammyrulez/minimal-play2&lt;/strong&gt;
&lt;em&gt;minimal-play2 - minimal rest service protorype&lt;/em&gt;github.com&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;web: target/universal/stage/bin/minimal-play2 -Dhttp.port=${PORT} -Dplay.crypto.secret=${APPLICATION_SECRET}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;the ${xxx} are variables:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;${PORT} is a Heroku variable with the port the app should bind to be exposed by their reverse proxy&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;${APPLICATION_SECRET} is a user define property that you can form Heroku console… a handy way to pass “secret” values (is apikey, oAuth credentials etc ) to you app without storing them in config files.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So now we are up and running!&lt;/p&gt;

&lt;p&gt;Open the “&lt;a href=&quot;http://minimal-play2.herokuapp.com&quot;&gt;home page&lt;/a&gt;”, thake note of the user token and try the &lt;a href=&quot;http://minimal-play2.herokuapp.com/webjars/swagger-ui/2.2.6/index.html?url=http://minimal-play2.herokuapp.com/swagger.json&quot;&gt;api&lt;/a&gt; with Swagger . Have fun!&lt;/p&gt;</content><author><name>samreghenzi</name></author><category term="blog" /><category term="playframework" /><category term="scala" /><category term="api" /><summary type="html">The post I link when someone tells me that Java sucks Plays Anatomy: Episode 2</summary></entry><entry><title type="html">Play’s Anatomy</title><link href="https://samreghenzi.it/plays-anatomy/" rel="alternate" type="text/html" title="Play’s Anatomy" /><published>2017-02-17T22:48:00+00:00</published><updated>2017-02-17T22:48:00+00:00</updated><id>https://samreghenzi.it/plays-anatomy</id><content type="html" xml:base="https://samreghenzi.it/plays-anatomy/">&lt;h1 id=&quot;plays-anatomy&quot;&gt;Play’s Anatomy&lt;/h1&gt;

&lt;p&gt;We are doctors… are we?&lt;/p&gt;

&lt;p&gt;A few weeks ago I found myself in the uncomfortable position of choosing a new “framework” to expose services through HTTP protocol. Well it would be handy if it had some other features:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;JSON serialization / deserialization&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;jwt authentication&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Async response&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Easy integration with an existing AKKA based solution&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Testing facility / Controller unit testing / Integration testing and a reasonable way to measure coverage&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Monitoring&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Deployable Heroku&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I started my humble quest: some frameworks looks promising, other in their way to the void. One day I was chatting with a friend no slack about my disappointing findings and he told me&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h1 id=&quot;im-sorry-to-say-that-youd-probably-should-you-play&quot;&gt;I’m sorry to say that you’d probably should you Play&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;I had my own experience with Play. It was version 1.x and for the time, a time in which it was all about full stack frameworks and monoliths, is was fun and productive. Later on, I gave version 2.0 a try but I was horrified: it was slow and buggy… and since then I heard a lot of negative comments on Play. But I also see it is widely used and often when you use something a lot, you find all the rough edges.&lt;/p&gt;

&lt;p&gt;So I decided to give it a try. I wanted to start with a minimal project so, instead of following the “getting started tutorial” I cloned this repo with all the intentions to implement the above feature set.
When I imported in the IDE my newly created project and I had a look at the dependencies it had my face was like:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2000/1*bM2nwuf6DGf89G_-Z3bArg.jpeg&quot; alt=&quot;Freely quoting “The Hobbit” (Bagginses? What is Bagginses?)&quot; /&gt;&lt;em&gt;Freely quoting “The Hobbit” (Bagginses? What is Bagginses?)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A gazillion of jar just to send “hello world” to a browser? I’m a sort of dependencies zealot but for a good reason: in the many years I spent on the JVM platform I realized that the more jars you have on the classpath the more it behave erratic, generating problems often associated with headaches and sleepless nights. I was about to close the IDE and write my own thing from scratch. But, just for the sake of curiosity, I start looking around. The “railesque” structure is sill there, but I learn after that you can switch to a more traditional sbt structure. The route file is optional as long as you define you route object, a standard approach in most of the scala frameworks I have worked with. The module system looks promising and it lost his horrible resemblance with the rails plugins systems that originally inspired it. Now modules are traits that plug in the application with the support of a runtime dependency injection. The default implementation is Google Juice. And this is the first of the many reasons a lot of people do not enjoy working with play. DI is a controversial topic, especially with scala…. Play is a very opinionated framework: most of the decisions has been already taken for you. This is why a lot of people don’t like it. I love minimalism in my tools, but I told to myself: this is the least interesting part of the solution, I just want a first class support to modern web features without going mad on low-level HTTP details. My problem with Play were the numerous many moving parts… so I tried to remove them, or at least to minimize the chance that they could get in my way.&lt;/p&gt;

&lt;h2 id=&quot;build-automation&quot;&gt;&lt;strong&gt;Build Automation&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;The most disturbing thing in past versions of play was that sbt was an option and not the standard. Now you can have a simple sbt build for your play project with a custom plugin. Just add your favorite plugins.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;sbt-release:&lt;/strong&gt; I like to have different features in different releases&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;sbt-scoverage&lt;/strong&gt;: To check if something is missing&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;**sbt-coveralls: **Is always nice to have fancy reports&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I used these sbt plugins before and found them perfect for a short release pipeline. Even if this was a solo project I added Travis-ci support just to have a build pipeline as close as possible to a real one. This is a crucial part for me in the decision-making project. Build automation is something that drives your product/project to success or damnation really quickly (in both cases ).
JSON serialization / deserialization&lt;/p&gt;

&lt;h2 id=&quot;json-serialization--deserialization&quot;&gt;JSON serialization / deserialization&lt;/h2&gt;

&lt;p&gt;Play comes with his own JSON library, but I have a crush for Circe
&lt;a href=&quot;https://circe.github.io/circe/&quot;&gt;&lt;strong&gt;circe&lt;/strong&gt;
&lt;em&gt;A JSON library for Scala powered by Cats&lt;/em&gt;circe.github.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is fast and provides a very functional to do things. The good part is that being so popular there already is a play-circe integration! The best of both worlds!&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;case class Bar(bar: Int)  
case class Foo(foo: String, bar: Bar)  

def get = Action { request =&amp;gt;    
    val foo = ...
    Ok(foo.asJson)  
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;jwt-authentication&quot;&gt;JWT authentication&lt;/h2&gt;

&lt;p&gt;Again, due to the popularity of Play jwt-play is a pret aprote solution to my problem and it plugs in the request / authentication system already in place: to have the details of the current request in one of your controllers.. just read it!&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    request.jwtSession.getAs[User](&quot;user&quot;) 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;No more messing around with keys, shared secrets, headers… if you are not in a hacking mood.&lt;/p&gt;

&lt;p&gt;So far so good. But then I tried to add swagger support to my secured JSON controller. Long story short it was not supported by the official Swagger Play Integration. So I fixed it. I made a pull request…. and nothing happened. So I forked the repo and make my own bootleg release&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;*resolvers *+= &quot;sammyrulez&quot; at &quot;https://raw.githubusercontent.com/sammyrulez/my-maven-repo/master/&quot;

libraryDependencies ++= Seq(&quot;io.swagger&quot; %% &quot;swagger-play2&quot; % &quot;1.5.4-SNAPSHOT&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You are wellcome.&lt;/p&gt;

&lt;p&gt;More on episode 2 …&lt;/p&gt;</content><author><name>samreghenzi</name></author><category term="blog" /><category term="java" /><category term="scala" /><category term="api" /><category term="microservices" /><summary type="html">Play’s Anatomy</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://samreghenzi.it/assets/images/posts/anatomy.jpeg" /></entry><entry><title type="html">The post I link when someone tells me that Java sucks</title><link href="https://samreghenzi.it/the-to-go-post-when-some-one-tells-me-java-sucks/" rel="alternate" type="text/html" title="The post I link when someone tells me that Java sucks" /><published>2016-11-22T22:48:00+00:00</published><updated>2016-11-22T22:48:00+00:00</updated><id>https://samreghenzi.it/the-to-go-post-when-some-one-tells-me-java-sucks</id><content type="html" xml:base="https://samreghenzi.it/the-to-go-post-when-some-one-tells-me-java-sucks/">&lt;h1 id=&quot;the-post-i-link-when-someone-tells-me-that-java-sucks&quot;&gt;The post I link when someone tells me that Java sucks&lt;/h1&gt;

&lt;p&gt;I had the chance to use other languages as well, but I spent the most part on Java or on JVM based languages. I had the chance to use also other languages (python to name one I absolutely love).&lt;/p&gt;

&lt;p&gt;In all these years I had to handle a lot of “Java sucks” conversations with people religiously in love with the language of the moment. So I resolute to write this post and link it whenever … a shit conversation that happens. I will present my point in favor of Java/ JVM based environment with a big bold disclaimer:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I DO NOT think that Java is the best language in the world and I love to learn new stuff. At the time of writing, &lt;em&gt;for the stuff I’m working on&lt;/em&gt; is just the best (IMHO) Option available.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These are the top 5 reasons people usually try to persuade me that Java sucks&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Java is slow&lt;/strong&gt;: this is plain wrong. Big data solutions ( spark, hadoop ) are all built on the JVM. Speaking of internet performance, Java solutions are the most performant ones after native engines: here you can check some &lt;a href=&quot;https://www.techempower.com/benchmarks/#section=data-r12&amp;amp;hw=peak&amp;amp;test=fortune&amp;amp;l=nvnl&quot;&gt;data&lt;/a&gt;. Maybe it was true in the past ( 10 years ago). Maybe GUI application built in Java is slower than a native one, but it is oblivious since native will always outrun a virtual environment.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Java is verbose:&lt;/strong&gt; What are we talking about here? The lack of syntactic sugar? The historical tradition to make all properties private than accessed with getter/setter methods? In modern Java ( 1.8 ) you can write pretty concise code with static imports to build quick DSL, annotation and annotation parser to build meta programming stuff, closures. There are historical reasons for some of the design choices. Let me quote &lt;a href=&quot;https://www.quora.com/Why-is-Java-so-verbose&quot;&gt;this answer on Quora&lt;/a&gt;: &lt;em&gt;Why is java so verbose?&lt;/em&gt;
    &lt;blockquote&gt;
      &lt;p&gt;The philosophy behind Java is evident in that it insists on making the programmer explicitly type out what they mean rather than providing syntactic sugar. For example, to create a derived class you use the word “extends” rather than “:” as in C++. There is no user-defined operator overloading. Naming conventions in Java result in very long names. Etc. Etc. The idea was to make a language which prevented novice mistakes and abuse. Java was basically a language designed by experts for non-experts&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Java is an old language ( or ”Java is the new Cobol”):&lt;/strong&gt; Java 1.8 has all the features of a statically typed Object Oriented features plus some Functional programming features. That said is also a very successful language so there is a lot of legacy code around, a lot of bad code ( because the more a language is used the more bad code is produced: more on this later). Long story short: yes you can write modern code with Java. There is a reason you need a dynamically typed language? Use Groovy. Want A Functional Programming language, first of its kind and most used in the industry? Try Scala! ( I love it!). The claim “startups do not use it” is plain false.
&lt;a href=&quot;https://www.valo.io/2016/08/10/why-did-we-choose-scala/&quot;&gt;&lt;strong&gt;Why did we choose Scala? · Real-time analytics on complex data streams — Valo&lt;/strong&gt;
&lt;em&gt;Posted Aug 10, 2016 by Valo Dev in Big Data and Scala Share in It is undeniably the case in IT that any new product, no…&lt;/em&gt;www.valo.io&lt;/a&gt;
&lt;a href=&quot;https://www.quora.com/What-kind-of-companies-use-Java-as-their-primary-language-in-software-development&quot;&gt;&lt;strong&gt;What kind of companies use Java as their primary language in software development?&lt;/strong&gt;
&lt;em&gt;Answer (1 of 12): While Facebook may use C++ and PHP, they also use Java extensively. Java is the language of business…&lt;/em&gt;www.quora.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://highscalability.com/blog/2016/8/15/how-paypal-scaled-to-billions-of-transactions-daily-using-ju.html&quot;&gt;How PayPal Scaled To Billions Of Transactions Daily Using Just 8VMs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.quora.com/What-startups-or-tech-companies-are-using-Scala&quot;&gt;What startups or tech companies are using Scala?&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;**Framework X / Java EE is over-engineered: **maybe… don’t use it. There are plenty of options. Java EE is a very broad variety of technologies and opensource frameworks that offer alternatives pops up every even day. Probably the real problem with Java is that products ( from commercial application source to open source lib) became feature bloated in time. I think because most of them are bound to enterprise development and that kind of market ( which I know pretty well) is a curse with the “adding features” madness. And then poor design also happens. I saw it with projects like Hibernate: I used it since version 1.28 and I witnessed it becoming a huge juggernaut entangled with hundreds of dependencies. When this happens probably people think it Java fault … it’s not.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;**Java is not open source / backed by corporations with evil intents: **maybe you lived writing PHP scripts in a mobile house with limited internet connection for the last 10 years. In that case, have a look &lt;a href=&quot;http://openjdk.java.net&quot;&gt;here&lt;/a&gt; to the OPEN JDK.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you want more details on the Java/JVM ecosystem to have a look at this article series by Geert Bevin
&lt;a href=&quot;http://zeroturnaround.com/rebellabs/10-reasons-why-java-now-rocks-more-than-ever-part-1-the-java-compiler/&quot;&gt;&lt;strong&gt;10 Reasons Why Java Rocks: Part I | zeroturnaround.com&lt;/strong&gt;
&lt;em&gt;When I was away from Java to work on the software of the Eigenharp instruments, I had to develop cross-platform real…&lt;/em&gt;zeroturnaround.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is going to be a “work in progress“ blog post since I think people will find always new reasons to rant.&lt;/p&gt;</content><author><name>samreghenzi</name></author><category term="blog" /><category term="java" /><category term="scala" /><category term="api" /><summary type="html">The post I link when someone tells me that Java sucks</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://samreghenzi.it/assets/images/posts/java-skull.png" /></entry><entry><title type="html">Markdown Extra Components</title><link href="https://samreghenzi.it/markdown-extra-components/" rel="alternate" type="text/html" title="Markdown Extra Components" /><published>2016-02-24T22:48:00+00:00</published><updated>2016-02-24T22:48:00+00:00</updated><id>https://samreghenzi.it/markdown-extra-components</id><content type="html" xml:base="https://samreghenzi.it/markdown-extra-components/">&lt;h2 id=&quot;summary&quot;&gt;Summary:&lt;/h2&gt;

&lt;p&gt;You can pick as item to see how to apply in markdown.&lt;/p&gt;

&lt;h4 id=&quot;especial-elements&quot;&gt;Especial Elements&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#evidence&quot;&gt;Evidence&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#side-by-side&quot;&gt;Side-by-Side&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#star&quot;&gt;Star&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#especial-breaker&quot;&gt;Especial Breaker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#spoiler&quot;&gt;Spoiler&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;external-elements&quot;&gt;External Elements&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#gist&quot;&gt;Gist&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#codepen&quot;&gt;Codepen&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#slideshare&quot;&gt;Slideshare&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#videos&quot;&gt;Videos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;evidence&quot;&gt;Evidence&lt;/h2&gt;

&lt;p&gt;You can try the evidence!&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;evidence&quot;&gt;Paragraphs can be written like so. A paragraph is the basic block of Markdown. A paragraph is what text will turn into when there is no reason it should become anything else.&lt;/span&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;evidence&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Paragraphs can be written like so. A paragraph is the basic block of Markdown. A paragraph is what text will turn into when there is no reason it should become anything else.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;side-by-side&quot;&gt;Side-by-side&lt;/h2&gt;

&lt;p&gt;Like the &lt;a href=&quot;https://medium.com/&quot;&gt;Medium&lt;/a&gt; component.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Image&lt;/strong&gt; on the left and &lt;strong&gt;Text&lt;/strong&gt; on the right:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;side-by-side&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;toleft&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;image&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://samreghenzi.it/assets/images/profile.jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Alt Text&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;figcaption&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;caption&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Photo by John Doe&lt;span class=&quot;nt&quot;&gt;&amp;lt;/figcaption&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;toright&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;div class=&quot;side-by-side&quot;&gt;
    &lt;div class=&quot;toleft&quot;&gt;
        &lt;img class=&quot;image&quot; src=&quot;https://samreghenzi.it/assets/images/profile.jpg&quot; alt=&quot;Alt Text&quot; /&gt;
        &lt;figcaption class=&quot;caption&quot;&gt;Photo by John Doe&lt;/figcaption&gt;
    &lt;/div&gt;

    &lt;div class=&quot;toright&quot;&gt;
        &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/p&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Text&lt;/strong&gt; on the left and &lt;strong&gt;Image&lt;/strong&gt; on the right:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;side-by-side&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;toleft&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;toright&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;image&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://samreghenzi.it/assets/images/profile.jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Alt Text&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;figcaption&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;caption&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Photo by John Doe&lt;span class=&quot;nt&quot;&gt;&amp;lt;/figcaption&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;div class=&quot;side-by-side&quot;&gt;
    &lt;div class=&quot;toleft&quot;&gt;
        &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&quot;toright&quot;&gt;
        &lt;img class=&quot;image&quot; src=&quot;https://samreghenzi.it/assets/images/profile.jpg&quot; alt=&quot;Alt Text&quot; /&gt;
        &lt;figcaption class=&quot;caption&quot;&gt;Photo by John Doe&lt;/figcaption&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;star&quot;&gt;Star&lt;/h2&gt;

&lt;p&gt;You can give evidence to a post. Just add the tag to the markdown file.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;star: true&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;especial-breaker&quot;&gt;Especial Breaker&lt;/h2&gt;

&lt;p&gt;You can add a especial &lt;em&gt;hr&lt;/em&gt; to your text.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;breaker&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;div class=&quot;breaker&quot;&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;spoiler&quot;&gt;Spoiler&lt;/h2&gt;

&lt;p&gt;You can add an especial hidden content that appears on hover.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;spoiler&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;p&amp;gt;&lt;/span&gt;your content&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;div class=&quot;spoiler&quot;&gt;&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/p&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;gist&quot;&gt;Gist&lt;/h2&gt;

&lt;p&gt;You can add Gists from github.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;{ % gist sergiokopplin/91ff4220480727b47224245ee2e9c291 % }&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;noscript&gt;&lt;pre&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt;
    &amp;lt;title&amp;gt;Just a Test!&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
  &amp;lt;h1&amp;gt;Working!&amp;lt;/h1&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/sergiokopplin/91ff4220480727b47224245ee2e9c291.js&quot;&gt; &lt;/script&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;codepen&quot;&gt;Codepen&lt;/h2&gt;

&lt;p&gt;You can add Pens from Codepen.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;268&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-theme-id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-slug-hash=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;gfdDu&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-default-tab=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;result&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-user=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;chriscoyier&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'codepen'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    See the Pen &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://codepen.io/chriscoyier/pen/gfdDu/'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Crappy Recreation of the Book Cover of *The Flame Alphabet*&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt; by Chris Coyier (&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://codepen.io/chriscoyier'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;@chriscoyier&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;) on &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://codepen.io'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;CodePen&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;.
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;//assets.codepen.io/assets/embed/ei.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p data-height=&quot;268&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;gfdDu&quot; data-default-tab=&quot;result&quot; data-user=&quot;chriscoyier&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/chriscoyier/pen/gfdDu/&quot;&gt;Crappy Recreation of the Book Cover of *The Flame Alphabet*&lt;/a&gt; by Chris Coyier (&lt;a href=&quot;http://codepen.io/chriscoyier&quot;&gt;@chriscoyier&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;slideshare&quot;&gt;Slideshare&lt;/h2&gt;

&lt;p&gt;Add your presentations here!&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;iframe&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;//www.slideshare.net/slideshow/embed_code/key/hqDhSJoWkrHe7l&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;560&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;310&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;frameborder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;marginwidth=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;marginheight=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;scrolling=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;no&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;allowfullscreen&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/iframe&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/hqDhSJoWkrHe7l&quot; width=&quot;560&quot; height=&quot;310&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen=&quot;&quot;&gt; &lt;/iframe&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;videos&quot;&gt;Videos&lt;/h2&gt;

&lt;p&gt;Do you want some videos? Youtube, Vimeo or Vevo? Copy the embed code and paste on your post!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;iframe&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;560&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;310&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://www.youtube.com/embed/r7XhWUDj-Ts&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;frameborder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;allowfullscreen&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;iframe width=&quot;560&quot; height=&quot;310&quot; src=&quot;https://www.youtube.com/embed/r7XhWUDj-Ts&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content><author><name>jamesfoster</name></author><category term="blog" /><category term="markdown" /><category term="components" /><category term="extra" /><summary type="html">Summary:</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://samreghenzi.it/assets/images/markdown.jpg" /></entry><entry><title type="html">Markdown Common Elements</title><link href="https://samreghenzi.it/markdown-common-elements/" rel="alternate" type="text/html" title="Markdown Common Elements" /><published>2016-02-24T22:44:00+00:00</published><updated>2016-02-24T22:44:00+00:00</updated><id>https://samreghenzi.it/markdown-common-elements</id><content type="html" xml:base="https://samreghenzi.it/markdown-common-elements/">&lt;h2 id=&quot;basic-formatting&quot;&gt;Basic formatting&lt;/h2&gt;

&lt;p&gt;This note &lt;strong&gt;demonstrates&lt;/strong&gt; some of what &lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; is &lt;em&gt;capable of doing&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;And that’s how to do it.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;This note **demonstrates** some of what [Markdown][some/link] is *capable of doing*.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;headings&quot;&gt;Headings&lt;/h2&gt;

&lt;p&gt;There are six levels of headings. They correspond with the six levels of HTML headings. You’ve probably noticed them already in the page. Each level down uses one more hash character. But we are using just 4 of them.&lt;/p&gt;

&lt;h1 id=&quot;headings-can-be-small&quot;&gt;Headings can be small&lt;/h1&gt;

&lt;h2 id=&quot;headings-can-be-small-1&quot;&gt;Headings can be small&lt;/h2&gt;

&lt;h3 id=&quot;headings-can-be-small-2&quot;&gt;Headings can be small&lt;/h3&gt;

&lt;h4 id=&quot;headings-can-be-small-3&quot;&gt;Headings can be small&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;# Heading
## Heading
### Heading
#### Heading&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;lists&quot;&gt;Lists&lt;/h2&gt;

&lt;h3 id=&quot;ordered-list&quot;&gt;Ordered list&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Item 1&lt;/li&gt;
  &lt;li&gt;A second item&lt;/li&gt;
  &lt;li&gt;Number 3&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;1. Item 1
2. A second item
3. Number 3&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;unordered-list&quot;&gt;Unordered list&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;An item&lt;/li&gt;
  &lt;li&gt;Another item&lt;/li&gt;
  &lt;li&gt;Yet another item&lt;/li&gt;
  &lt;li&gt;And there’s more…&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;* An item
* Another item
* Yet another item
* And there's more...&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;paragraph-modifiers&quot;&gt;Paragraph modifiers&lt;/h2&gt;

&lt;h3 id=&quot;quote&quot;&gt;Quote&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Here is a quote. What this is should be self explanatory. Quotes are automatically indented when they are used.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;&amp;gt; Here is a quote. What this is should be self explanatory.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;urls&quot;&gt;URLs&lt;/h2&gt;

&lt;p&gt;URLs can be made in a handful of ways:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A named link to &lt;a href=&quot;http://www.markitdown.net/&quot;&gt;Mark It Down&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Another named link to &lt;a href=&quot;http://markitdown.net/&quot;&gt;Mark It Down&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Sometimes you just want a URL like &lt;a href=&quot;http://markitdown.net/&quot;&gt;http://markitdown.net/&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;* A named link to [MarkItDown][3].
* Another named link to [MarkItDown](http://markitdown.net/)
* Sometimes you just want a URL like &amp;lt;http://markitdown.net/&amp;gt;.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;horizontal-rule&quot;&gt;Horizontal rule&lt;/h2&gt;

&lt;p&gt;A horizontal rule is a line that goes across the middle of the page.
It’s sometimes handy for breaking things up.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;---&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;images&quot;&gt;Images&lt;/h2&gt;

&lt;p&gt;Markdown can also contain images. I’ll need to add something here sometime.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;![Markdowm Image][/image/url]&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;http://kune.fr/wp-content/uploads/2013/10/ghost-blog.jpg&quot; alt=&quot;Markdowm Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Figure Caption&lt;/em&gt;?&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;![Markdowm Image][/image/url]
&amp;lt;figcaption class=&quot;caption&quot;&amp;gt;Photo by John Doe&amp;lt;/figcaption&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;http://kune.fr/wp-content/uploads/2013/10/ghost-blog.jpg&quot; alt=&quot;Markdowm Image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;Photo by John Doe&lt;/figcaption&gt;

&lt;p&gt;&lt;em&gt;Bigger Images&lt;/em&gt;?&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;![Markdowm Image][/image/url]{: class=&quot;bigger-image&quot; }&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;http://kune.fr/wp-content/uploads/2013/10/ghost-blog.jpg&quot; alt=&quot;Markdowm Image&quot; class=&quot;bigger-image&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;code&quot;&gt;Code&lt;/h2&gt;

&lt;p&gt;A HTML Example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Document&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Just a test&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A CSS Example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;pre&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;.8em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;white-space&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;pre&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;pre&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;tt&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Monaco&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Consolas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Inconsolata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;monospace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sans-serif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;.05&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A JS Example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Sticky Header&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scroll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scrollTop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;900&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;body&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hasClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'show-menu'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#hamburguer__open'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fadeOut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fast'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;body&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hasClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'show-menu'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#hamburguer__open'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fadeIn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fast'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>johndoe</name></author><category term="blog" /><category term="markdown" /><category term="elements" /><summary type="html">Basic formatting</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://samreghenzi.it/assets/images/markdown.jpg" /></entry><entry><title type="html">Fighting and martial arts explained to my wife</title><link href="https://samreghenzi.it/why-I-love-martial-arts-explained-to-my-wife/" rel="alternate" type="text/html" title="Fighting and martial arts explained to my wife" /><published>2015-10-14T22:48:00+00:00</published><updated>2015-10-14T22:48:00+00:00</updated><id>https://samreghenzi.it/why-I-love-martial-arts-explained-to-my-wife</id><content type="html" xml:base="https://samreghenzi.it/why-I-love-martial-arts-explained-to-my-wife/">&lt;h1 id=&quot;fighting-and-martial-arts-explained-to-my-wife&quot;&gt;Fighting and martial arts explained to my wife&lt;/h1&gt;

&lt;p&gt;About a week ago my wife ask me why I put so much effort in my martial art training. It was late, I was tired and did not came up with a good answer. So the day after I wrote an email. This is a translated and redacted version. I hope it could have some good point to explain why you go to the gym, sweat and get your ass kicked on regular basis.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;Ciao I was intrigued by your questions about why I do kickboxing . In general, where does my passion for martial arts and combat sports originate if you know me as a person devoted to mediation and dialogue. First let’s clear the field from violence. I like the action, but certainly not violence for its own sake . I think I’ve scored a few sentences from the book I’m reading that I believe can be very explanatory : *Physical violence , which is the most obvious, frightening and dramatic manifestation of the conflict is a training tool to overcome the fear of conflict.&lt;/em&gt; Therefore overcome the fear of conflict. As you know I’m always afraid of conflict with you, with colleagues even with our beloved sons. I believe the balance is the way to happiness, an conflict is the opposite of balance. So if you can “balance your conflicts” you are on the road to happiness. I can’t find a better way than martial arts for this process. It is also a way to deal with reality in a different way and this is what really fascinates me. You always say , rightly, that I’m cerebral and analytical kind of person but in combat, there is no time to analyse . Suddenly we find ourselves in a situation where* rational thought has less credit for an invitation to lunch in the village of a cannibal tribe &lt;em&gt;(cit. Daniele Bolelli ) . It is both exciting and scary to be screened in this dimension.** *[REDACTED]&lt;/em&gt; Martial arts are a mean to get in touch with my potential. In the practice of martial arts there is a return to primordial simplicity . Last but not least are an excellent way to keep fit : I feel like I’m at the same time the artist and the art work. I wanted to explain these things because you’re the person who knows me better and I want to continue to be so. I love you .*&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Originally published at &lt;a href=&quot;http://www.fightingmyway.com/2014/03/fighting-and-martial-arts-explained-to.html&quot;&gt;www.fightingmyway.com&lt;/a&gt; on March 14, 2014.&lt;/em&gt;&lt;/p&gt;</content><author><name>samreghenzi</name></author><category term="blog" /><category term="personal" /><category term="martial" /><summary type="html">Fighting and martial arts explained to my wife</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://samreghenzi.it/assets/images/markdown.jpg" /></entry><entry><title type="html">OpenId: a postmortem</title><link href="https://samreghenzi.it/openid-post-mortem/" rel="alternate" type="text/html" title="OpenId: a postmortem" /><published>2015-09-24T22:48:00+00:00</published><updated>2015-09-24T22:48:00+00:00</updated><id>https://samreghenzi.it/openid-post-mortem</id><content type="html" xml:base="https://samreghenzi.it/openid-post-mortem/">&lt;h1 id=&quot;openid-a-postmortem&quot;&gt;OpenId: a postmortem&lt;/h1&gt;

&lt;p&gt;Some years ago I was a big fan of OpenID and tried to promote it in my various dev communities. It was a good solution to a problem that I knew enough fine. The single sign-on. Mandatory definition of SSO:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Single sign-on (SSO) is a property of access control of multiple related, but independent software systems.
With this property a user logs in with a single ID to gain access to a connected system or systems without being prompted for different usernames or passwords, or in some configurations seamlessly sign on at each system.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;OpenID provides a clear answer to a as crucial as tedious aspect of the development process: authentication.&lt;/p&gt;

&lt;h2 id=&quot;postmortem&quot;&gt;POSTMORTEM:&lt;/h2&gt;

&lt;p&gt;First of all OpenID is not dead. In particular contexts I would use ir again. But what went wrong?&lt;/p&gt;

&lt;p&gt;Technically speaking using OpenID in your application is not particularly complex. Libraries are available for all programming languages ​​and for all mainstream web frameworks. Realizing a OpenID provider is rather complicated through.&lt;/p&gt;

&lt;p&gt;Choosing an OpenID provider (or more than one) has not been easy. Although one of the strengths of the solution is to have a URI and delegate identity management to a provider (so you can change without having to change URI),this process is not within the reach of the average user. This brings us to the third point&lt;/p&gt;

&lt;p&gt;OpenId is only for “geeks / nerds / dev”: the concept of distributed identity is beyond the comprehension of the average user. I do not think, as I have heard, that the authentication is a “self-imposed” problem (it is like saying that hunger is a self-imposed problem: everyone has to eat!)&lt;/p&gt;

&lt;p&gt;OpenId haven’t a clear, simple and universally accepted mechanism for user details exchange between client application and provider. This forces the client app to ask for the data again during the “registration” process and undermines the fact of having a centralized identity manager.&lt;/p&gt;

&lt;p&gt;Oauth and the apocalypse of social networks: all of the above problems have been solved with the advent of social networks and the exposure of its API with Oauth upon them. The famous “Facebook connect” or “Sign is with Twitter”. The client application could access the potential user data with a few of clicks, with the help an “authority” perceived as safe/secure . As a bonus there is also to be able to put his nose in the activity of its members on the above company. Win win situation.&lt;/p&gt;

&lt;p&gt;The two details that amaze me to this last point is that Oauth born as a system of authorization and authentication, and that many developers think that OpenID is a particular version / dialect / library Oauth.&lt;/p&gt;

&lt;p&gt;The most absurd part of the whole thing is that at some point OpenId had started to have some popularity.&lt;/p&gt;

&lt;p&gt;Microsoft, Google, had begun to act as providers, huge sites like StackOverflow had started using it with &lt;a href=&quot;http://blog.stackoverflow.com/2010/04/openid-one-year-later/&quot;&gt;some success&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I think that OpenID, although it is not a technology dead, has no longer the chance to reach enought momentum to become the “go to” solution for single sign-on. Definitely a missed opportunity. Who is to blame? Perhaps all of us ( just a bit) and no one in particular. I just hope that solutions emerge to orchestrate better authorization processes through Oauth that put to a more responsible use of data and integration between the web-apps.&lt;/p&gt;</content><author><name>samreghenzi</name></author><category term="blog" /><category term="sso" /><category term="security" /><category term="api" /><summary type="html">OpenId: a postmortem</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://samreghenzi.it/assets/images/markdown.jpg" /></entry></feed>